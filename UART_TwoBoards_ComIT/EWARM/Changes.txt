** IAR EWARM 7.80.4 **

Download: STM32CubeF0 Version 1.8.0
In Ordner Projects einen Ordner mit STM32F030C8_Varta angelegt
Aus Ordner ..\STM32F030R8-Nucleo\Examples\UART\ den Ordner "UART_TwoBoards_ComIT" in den Ordner "STM32F030C8_Varta" kopiert 

Project -> Edit Configurations..  -> New…  (Based on STM32F030R8-Nucleo) STM32F030C8_Des_Eval angelegt
Project -> Edit Configurations.. -> Remove STM32F030R8-Nucleo
Options->Geneal Options Controller geändert alt: ST STM32F030R8  neu: ST STM32F030C8
Options->C/C++ Compiler Reiter Preprocessor „USE_STM32F0XX_NUCLEO” gelöscht
Options->C/C++ Compiler Reiter Preprocessor ->Additional include directories angepasst
Options->Linker Reiter List ->Generate log file
Options->Output Converter ->Name für das Ausgabefile geändert in STM32F030C8-Varta.hex
Rechte Maus auf Drivers\BSP\STM32F0xx-Nucleo\stm32f0xx_nucleo.c -> Remove
Rechte Maus auf Drivers\BSP\STM32F0xx-Nucleo\ -> Remove
Rechte Maus auf Drivers\BSP\ -> Add->Add Files.. und zu ..\STM32F030C8_Varta\UART_TwoBoards_ComIT\BSP\stm32f0xx_Des_Eval.h und stm32f0xx_Des_Eval.h navigiert
Rechte Maus auf Example\User\ -> Add->Add Files.. main.h
Rechte Maus auf Drivers\STM32F0xx_HAL_DRIVER -> Remove alle 8 (stm32f0xx_hal.c bis stm32f0xx_hal_uart_ex.c)
Rechte Maus auf Drivers\STM32F0xx_HAL_DRIVER -> Add Group... Inc
Rechte Maus auf Drivers\STM32F0xx_HAL_DRIVER -> Add Group... Src
Rechte Maus auf Drivers\STM32F0xx_HAL_DRIVER\Src -> Add->Add Files.. alle 8 (stm32f0xx_hal.c bis stm32f0xx_hal_uart_ex.c)
Rechte Maus auf Drivers\STM32F0xx_HAL_DRIVER\Inc -> Add->Add Files.. alle 8 (stm32f0xx_hal.h bis stm32f0xx_hal_uart_ex.h)

main.h
  #include "stm32f0xx_nucleo.h geändert in stm32f0xx_Des_Eval.h
  
stm32f0xx_Des_Eval.c
  #include "stm32f0xx_nucleo.h" geändert in stm32f0xx_Des_Eval.h
  
stm32f0xx_hal_msp.c
  //void HAL_UART_MspDeInit(UART_HandleTypeDef *huart) ganze Fkt auskommentiert
  
stm32f0xx_it.h
  //void USARTx_IRQHandler(void);
  void DEBUG_USART_IRQHandler(void);
  
stm32f0xx_it.c
  //extern UART_HandleTypeDef UartHandle;
  extern UART_HandleTypeDef DEBUGUartHandle;
  
  //void USARTx_IRQHandler(void)
  void DEBUG_USART_IRQHandler(void)
  {
    //HAL_UART_IRQHandler(&UartHandle);
    HAL_UART_IRQHandler(&DEBUGUartHandle);
  }

stm32f0xx_hal_conf.h
  #define HAL_TIM_MODULE_ENABLED
  Rechte Maus auf Drivers\STM32F0xx_HAL_DRIVER\Src -> Add->Add Files.. stm32f0xx_hal_tim.c
  Rechte Maus auf Drivers\STM32F0xx_HAL_DRIVER\Src -> Add->Add Files.. stm32f0xx_hal_tim_ex.c
  Rechte Maus auf Drivers\STM32F0xx_HAL_DRIVER\Inc -> Add->Add Files.. stm32f0xx_hal_tim.h
  Rechte Maus auf Drivers\STM32F0xx_HAL_DRIVER\Src -> Add->Add Files.. stm32f0xx_hal_tim_ex.h
  
  #define HAL_I2C_MODULE_ENABLED
  Rechte Maus auf Drivers\STM32F0xx_HAL_DRIVER\Src -> Add->Add Files.. stm32f0xx_hal_i2c.c
  Rechte Maus auf Drivers\STM32F0xx_HAL_DRIVER\Src -> Add->Add Files.. stm32f0xx_hal_i2c_ex.c
  Rechte Maus auf Drivers\STM32F0xx_HAL_DRIVER\Inc -> Add->Add Files.. stm32f0xx_hal_i2c.h
  Rechte Maus auf Drivers\STM32F0xx_HAL_DRIVER\Src -> Add->Add Files.. stm32f0xx_hal_i2c_ex.h

main.h 
  Anpassungen für I2C1
stm32f0xx_hal_msp.c
  void HAL_I2C_MspInit(I2C_HandleTypeDef *hi2c) implementiert
  
  



flash_if.h
  /* Notable Flash addresses */
  #if  defined(STM32F107xC) //MF
    #define USER_FLASH_END_ADDRESS        0x08040000
  #elif defined(STM32F103xB)
    #define USER_FLASH_END_ADDRESS        0x08020000
  #else
    #error Please insert Definition for USER_FLASH_END_ADDRESS
  #endif

  #if  defined(STM32F107xC) //MF
  /* Define bitmap representing user flash area that could be write protected (check restricted to pages 8-39). */
  #define FLASH_PAGE_TO_BE_PROTECTED (OB_WRP_PAGES8TO9 | OB_WRP_PAGES10TO11 | OB_WRP_PAGES12TO13 | OB_WRP_PAGES14TO15 | \
                                      OB_WRP_PAGES16TO17 | OB_WRP_PAGES18TO19 | OB_WRP_PAGES20TO21 | OB_WRP_PAGES22TO23 | \
                                      OB_WRP_PAGES24TO25 | OB_WRP_PAGES26TO27 | OB_WRP_PAGES28TO29 | OB_WRP_PAGES30TO31 | \
                                      OB_WRP_PAGES32TO33 | OB_WRP_PAGES34TO35 | OB_WRP_PAGES36TO37 | OB_WRP_PAGES38TO39  )
  #elif defined(STM32F103xB)
  #define FLASH_PAGE_TO_BE_PROTECTED (OB_WRP_PAGES16TO19 | OB_WRP_PAGES20TO23 | OB_WRP_PAGES24TO27 | OB_WRP_PAGES28TO31 | \
                                      OB_WRP_PAGES32TO35 | OB_WRP_PAGES36TO39 | OB_WRP_PAGES40TO43 | OB_WRP_PAGES44TO47 | \
                                      OB_WRP_PAGES48TO51 | OB_WRP_PAGES52TO55 | OB_WRP_PAGES56TO59 | OB_WRP_PAGES60TO63 | \
                                      OB_WRP_PAGES64TO67 | OB_WRP_PAGES68TO71 | OB_WRP_PAGES72TO75 | OB_WRP_PAGES76TO79 | \
                                      OB_WRP_PAGES80TO83 | OB_WRP_PAGES84TO87 | OB_WRP_PAGES88TO91 | OB_WRP_PAGES92TO95 | \
                                      OB_WRP_PAGES96TO99 | OB_WRP_PAGES100TO103 | OB_WRP_PAGES104TO107 | OB_WRP_PAGES108TO111 | \
                                      OB_WRP_PAGES112TO115 | OB_WRP_PAGES116TO119 | OB_WRP_PAGES120TO123 | OB_WRP_PAGES124TO127 )
  #else
  #error Please insert Definition for write protection
  #endif //MF end
  
  /* Base address of the Flash sectors */
  #if  defined(STM32F107xC) //MF
  #define ADDR_FLASH_PAGE_0     ((uint32_t)0x08000000) /* Base @ of Page 0, 2 Kbytes */
  ...
  #elif defined(STM32F103xB)
  #define ADDR_FLASH_PAGE_0     ((uint32_t)0x08000000) /* Base @ of Page 0, 1 Kbytes */
  ...
  #else
  #error Please insert Definition
  #endif //MF end

main.c
  #if  defined(STM32F107xC) //MF
  /* Configure PLLs ------------------------------------------------------*/
  /* PLL2 configuration: PLL2CLK = (HSE / HSEPrediv2Value) * PLL2MUL = (25 / 5) * 8 = 40 MHz */
  /* PREDIV1 configuration: PREDIV1CLK = PLL2CLK / HSEPredivValue = 40 / 5 = 8 MHz */
  /* PLL configuration: PLLCLK = PREDIV1CLK * PLLMUL = 8 * 9 = 72 MHz */ 
  ...
    #elif defined(STM32F103xB)
    /* Configure PLLs ------------------------------------------------------*/
  /* PLL configuration: PLLCLK = PREDIV1CLK * PLLMUL = 8 * 9 = 72 MHz */ 

  /* Enable HSE Oscillator and activate PLL with HSE as source */
  oscinitstruct.OscillatorType        = RCC_OSCILLATORTYPE_HSE;
  oscinitstruct.HSEState              = RCC_HSE_ON;
  oscinitstruct.HSEPredivValue        = RCC_HSE_PREDIV_DIV1;//MF
  //MF oscinitstruct.Prediv1Source         = RCC_PREDIV1_SOURCE_PLL2;
  oscinitstruct.PLL.PLLState          = RCC_PLL_ON;
  oscinitstruct.PLL.PLLSource         = RCC_PLLSOURCE_HSE;
  oscinitstruct.PLL.PLLMUL            = RCC_PLL_MUL9;
  //MF oscinitstruct.PLL2.PLL2State        = RCC_PLL2_ON;
  //MF oscinitstruct.PLL2.PLL2MUL          = RCC_PLL2_MUL8;
  //MF oscinitstruct.PLL2.HSEPrediv2Value  = RCC_HSE_PREDIV2_DIV5;
  #else
  #error Please insert Definition
  #endif //MF end
 
 hw_config.h und hw_config.c erstellt und Code erstellt

rechte Maus auf Group "STM3210C_EVAL" -> Remove
 
main.h
  //MF #include "stm3210c_eval.h"
  #include "hw_config.h"
  
menu.h und menu.c Bootloader Pre
common.h
  #define BL_TIMEOUT          ((uint32_t)5000)//MF    